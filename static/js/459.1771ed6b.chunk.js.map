{"version":3,"file":"static/js/459.1771ed6b.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mBAAvG,EAAiI,mB,kBCMlH,SAASA,IAEpB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAmBH,GAASI,MAAK,SAAAC,GAAO,OAAEN,EAASM,EAAQC,WAC7D,CAACN,KAIC,8BACKF,IACG,eAAIS,UAAWC,EAAf,SACKV,EAAMW,KAAI,SAACH,GAAD,OACd,gBACGC,UAAWC,EADd,UAEAF,EAAKI,cACF,gBACIC,IAAKR,EAAAA,GAAiBG,EAAKI,aAC3BE,IAAKN,EAAKO,KACVC,MAAM,MACEC,OAAO,MACPR,UAAWC,KAClB,SAAC,MAAD,CACDD,UAAWC,KACnB,cAAGD,UAAWC,EAAd,SAAuBF,EAAKO,SAXlBP,EAAKU,a,4MCtBzBC,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAAnB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OACtBH,EADsB,sCACgBC,IAI1C,SAASa,EAAkBC,GAC9B,OAAOZ,EAAuB,GAAD,OACtBH,EADsB,gCACUC,EADV,iCAC0Cc,EAD1C,gCAK1B,SAASC,EAAkBjC,GAC9B,OAAOoB,EAAuB,GAAD,OACtBH,EADsB,iBACLjB,EADK,oBACckB,EADd,oBAK1B,SAASgB,EAAelC,GAC3B,OAAOoB,EAAuB,GAAD,OACtBH,EADsB,iBACLjB,EADK,4BACsBkB,EADtB,oBAK1B,SAASiB,EAAkBnC,GAC9B,OAAOoB,EAAuB,GAAD,OACtBH,EADsB,iBACLjB,EADK,4BACsBkB,EADtB","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"item\":\"Cast_item__vxHbm\",\"image\":\"Cast_image__ELqru\",\"icon\":\"Cast_icon__XpqHH\",\"name\":\"Cast_name__y8nr9\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { BiUser } from \"react-icons/bi\";\nimport s from \"./Cast.module.css\"\n\nimport * as API from \"services/themoviedb-api.js\";\n\nexport default function Cast() {\n\n    const [casts, setCasts] = useState(null);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        API.fetchMovieCast(movieId).then(request=>setCasts(request.cast));\n    },[movieId])\n    \n\n    return (\n        <>\n            {casts && \n                <ul className={s.list}>\n                    {casts.map((cast) => \n                 <li key={cast.id}\n                    className={s.item}>\n                {cast.profile_path ?\n                    <img\n                        src={API.POSTER_URL + cast.profile_path}\n                        alt={cast.name}\n                        width=\"100\"\n                                height=\"150\"\n                                className={s.image}\n                    /> : <BiUser\n                        className={s.icon} />}\n                <p className={s.name}>{cast.name}</p>\n            </li>\n            )}\n                </ul>\n            }\n        </>\n    )\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n}\n\n\nexport function fetchTrendingMovies() {\n    return fetchWithErrorHandling(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n}\n\nexport function fetchMovieDetails(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieCast(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieReviews(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n}"],"names":["Cast","useState","casts","setCasts","movieId","useParams","useEffect","API","then","request","cast","className","s","map","profile_path","src","alt","name","width","height","id","BASE_URL","API_KEY","POSTER_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}