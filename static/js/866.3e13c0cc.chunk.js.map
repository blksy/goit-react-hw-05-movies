{"version":3,"file":"static/js/866.3e13c0cc.chunk.js","mappings":"kNACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,aAAe,+B,kBCKvG,SAASA,IAEpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAsBN,GACjBO,MAAK,SAAAC,GAAQ,OAAEJ,EAAWI,EAASC,cACzC,CAACT,KAGA,8BACKG,EAAQO,OAAS,GACd,eAAIC,UAAWC,EAAAA,KAAf,SACKT,EAAQU,KAAI,SAAAC,GAAM,OACf,gBAAoBH,UAAWC,EAAAA,KAA/B,WACI,eAAGD,UAAWC,EAAAA,KAAd,sBAA8B,0BAAOE,EAAOC,aAC5C,cAAGJ,UAAWC,EAAAA,KAAd,SAAuBE,EAAOE,YAFzBF,EAAOG,UAMtB,cAAGN,UAAWC,EAAAA,aAAd,2D,4MC3BZM,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAAnB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUf,EADV,QAEoBiB,GAFpB,iCAGgBjB,EAASkB,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOT,EAAuB,GAAD,OACtBH,EADsB,sCACgBC,IAI1C,SAASY,EAAkBC,GAC9B,OAAOX,EAAuB,GAAD,OACtBH,EADsB,gCACUC,EADV,iCAC0Ca,EAD1C,gCAK1B,SAASC,EAAkBjC,GAC9B,OAAOqB,EAAuB,GAAD,OACtBH,EADsB,iBACLlB,EADK,oBACcmB,EADd,oBAK1B,SAASe,EAAelC,GAC3B,OAAOqB,EAAuB,GAAD,OACtBH,EADsB,iBACLlB,EADK,4BACsBmB,EADtB,oBAK1B,SAASgB,EAAkBnC,GAC9B,OAAOqB,EAAuB,GAAD,OACtBH,EADsB,iBACLlB,EADK,4BACsBmB,EADtB","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"name\":\"Reviews_name__puWkV\",\"text\":\"Reviews_text__fgYm-\",\"notification\":\"Reviews_notification__A65Og\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport s from \"./Reviews.module.css\";\nimport * as API from \"services/themoviedb-api.js\";\n\n\nexport default function Reviews() {\n\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        API.fetchMovieReviews(movieId)\n            .then(response=>setReviews(response.results))\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews.length > 0 ?\n                <ul className={s.list}>\n                    {reviews.map(review =>\n                        <li key={review.id} className={s.item}>\n                            <p className={s.name}>Author: <span>{review.author}</span></p>\n                            <p className={s.text}>{review.content}</p>\n                        </li>\n                    )}\n                </ul>\n                : <p className={s.notification}>We don't have any reviews for this movie.</p>\n            }\n        </>\n    );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n}\n\n\nexport function fetchTrendingMovies() {\n    return fetchWithErrorHandling(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n}\n\nexport function fetchMovieDetails(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieCast(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieReviews(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","response","results","length","className","s","map","review","author","content","id","BASE_URL","API_KEY","POSTER_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}