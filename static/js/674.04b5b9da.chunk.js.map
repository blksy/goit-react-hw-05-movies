{"version":3,"file":"static/js/674.04b5b9da.chunk.js","mappings":"4LACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAuF,yB,SCG1EA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWC,EAAf,SACKJ,GAAUA,EAAOK,KAAI,SAAAC,GAAK,OACvB,eACIH,UAAWC,EADf,UAEI,SAAC,KAAD,CACIG,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMT,GACfE,UAAWC,EAHf,SAIKE,EAAMK,SANNL,EAAME,W,gGCV/B,EAAwB,wB,kBCKT,SAASI,IAEpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAYA,OATAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KACKC,MAAK,SAAAC,GAAQ,OAAIJ,EAAUI,EAASC,YACpCC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAErB,KAIC,iCACI,eAAIlB,UAAWC,EAAf,6BACA,SAACL,EAAA,EAAD,CAAYC,OAAQA,S,4MCvB1BwB,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAAnB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUX,EADV,QAEoBa,GAFpB,iCAGgBb,EAASc,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOT,EAAuB,GAAD,OACtBH,EADsB,sCACgBC,IAI1C,SAASY,EAAkBC,GAC9B,OAAOX,EAAuB,GAAD,OACtBH,EADsB,gCACUC,EADV,iCAC0Ca,EAD1C,gCAK1B,SAASC,EAAkBC,GAC9B,OAAOb,EAAuB,GAAD,OACtBH,EADsB,iBACLgB,EADK,oBACcf,EADd,oBAK1B,SAASgB,EAAeD,GAC3B,OAAOb,EAAuB,GAAD,OACtBH,EADsB,iBACLgB,EADK,4BACsBf,EADtB,oBAK1B,SAASiB,EAAkBF,GAC9B,OAAOb,EAAuB,GAAD,OACtBH,EADsB,iBACLgB,EADK,4BACsBf,EADtB","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"link\":\"MoviesList_link__8rTGX\",\"item\":\"MoviesList_item__eePYv\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport s from \"./MoviesList.module.css\";\n\nexport const MoviesList = ({ movies }) => {\n    \n    const location = useLocation();\n    \n    return (\n        <ul className={s.list}>\n            {movies && movies.map(movie =>\n                <li key={movie.id}\n                    className={s.item}>\n                    <Link\n                        to={`/movies/${movie.id}`}\n                        state={{ from: location }}\n                        className={s.link}>\n                        {movie.title}\n                    </Link>\n                </li>\n            )}\n        </ul>\n    );\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n        }),\n    ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import { useState, useEffect } from \"react\";\n\nimport { MoviesList } from \"components/MoviesList/MoviesList.jsx\";\nimport s from \"./HomePage.module.css\";\nimport * as api from \"services/themoviedb-api.js\";\n\nexport default function HomePage() {\n\n    const [movies, setMovies] = useState([]);\n\n\n    useEffect(() => {\n        api.fetchTrendingMovies()\n            .then(response => setMovies(response.results))\n            .catch(error => {\n                console.log(error);\n            })\n    }, []);\n\n\n    return (\n        <>\n            <h2 className={s.title}>Trending today</h2>\n            <MoviesList movies={movies} />\n        </>\n    );\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n}\n\n\nexport function fetchTrendingMovies() {\n    return fetchWithErrorHandling(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n}\n\nexport function fetchMovieDetails(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieCast(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n}\n\nexport function fetchMovieReviews(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n}"],"names":["MoviesList","movies","location","useLocation","className","s","map","movie","to","id","state","from","title","HomePage","useState","setMovies","useEffect","api","then","response","results","catch","error","console","log","BASE_URL","API_KEY","POSTER_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}